[tool.poetry]
name = "ferias-libres-data"
version = "0.1.0"
description = "Archivos de datos para Ferias Libres"
authors = ["Mario Hernandez <mariofix@pm.me>"]
license = "MIT"
readme = "README.md"
packages = [{include = "ferias_libres"}]

[tool.poetry.dependencies]
python = "^3.11"
httpx = "*"
typer = {extras = ["all"], version = "*"}
pydantic-settings = "^1.99"
python-slugify = "*"
flask-admin = "*"
flask = "^2.3.2"
flask-restx = "*"
flask-http-middleware = "*"
flask-migrate = "^4.0.4"
python-dotenv = "*"
flask-debugtoolbar = "*"
flask-babel = "^3.1.0"
sqlalchemy-repr = "*"
thankyou = "*"
pymysql = "*"
bcrypt = "*"
python-multipart = "*"
flask-security-too = {extras = ["babel", "common", "sqla"], version = "*"}
sqlalchemy-mixins = "*"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "*"
pytest = "*"
coverage = "*"
isort = "*"
pre-commit = "*"
pyupgrade = "*"
autopep8 = "*"

[tool.poetry.group.deploy]
optional = true

[tool.poetry.group.deploy.dependencies]
gunicorn = "*"

[tool.autopep8]
max_line_length = 120
ignore = "E501,W6"  # or ["E501", "W6"]
in-place = true
recursive = true
aggressive = 3

[tool.black]
line-length = 120
target-version = ['py311']

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = [
    "tests",
]
python_files =[
    "test*.py"
]

[tool.poetry.scripts]
ferias-libres = 'cli:app'

[tool.isort]
profile = "black"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
